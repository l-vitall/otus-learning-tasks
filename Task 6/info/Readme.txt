Описание решения:
Для более-менее статических ресурсов возвращается хедер Cache-Control: public,max-age=86400
	- в коде сделано на уровне аттрибута [ResponseCache(CacheProfileName = "Static")] у нужного метода
		- профиль Static создан отдельно с длительностью 86400
- в коде сделана поддержка Etag, но т.к. статических объектов пока не возвращается - в его использовании нет смысла т.к. считать хеш после выполнения запроса на бд бессмысленно.
- в коде используется серверное кеширование с использованием встроенных инструментов aspnet.core (аналог ручного кеширования результатов запроса в памяти)
	- используется системный сервис IMemoryCache, ключи экспайрятся за 30 секунд
	- если один из указанных входных параметров отличается о сохраненных в кеше - запрос выполняется, иначе результат берется из кеша
	- кеш храниться в локальной памяти, так что в случае нескольких сервисов нужны sticky sessions или переконфигурирование на использование редиса, тарантула и т.п.
- добавлена переменная окружения CACHE_ENABLED, от которой зависит использование / неиспользование кеша

Если кеширование включено - то на получение данных из бд стоит задержка 1 секунда для наглядности
Если кеширование выключено - искусственных задержек нет, идет напрямую обращение к бд

1. Команды установки:
cd "./app-chart"
helm dependency update
cd "../auth-chart"
helm install auth-app ./hello-chart
cd ..
helm install myapp ./app-chart
helm install myauth ./auth-chart

2. Я использовал неймспейс finalwork, хотя вроде бы не должно быть привязки
3. Тесты postman лежат в соответствующей папке 
    - cd "./postman"
    - newman run "Task 6.postman_collection.json"