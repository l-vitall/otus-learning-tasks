Пользовательские сценарии
1. Есть неавторизованный клиент
    - он может зарегистрироваться, предоставив поля:
        - Email
        - Password
        - FirstName
        - lastName
        - DailyCaloriesTarget
    - система отправляем ему confirmation email
    - он переходит по ссылке оттуда и активирует свой аккаунт
    - он может залогиниться, предоставив поля:
        - Email
        - Password
    - неактивированный аккаунт не может залогиниться
    - после трех неудачных попыток логина аккаунт деактивируется
        - админ может разлочить его
    
2.  Есть авторизованный клиент
- И есть Rest API системаы трекинга калорий (приемов пищи)
    - клиент передает в строке поиска по истории фильтры, опции сортировки (или не передает ничего)
        - search=(date eq '2020-07-21') AND ((numberOfCalories gt 20) OR (numberOfCalories lt 1100))
        - orderBy=text desc
        - limit=3&offset=3
    - Получает список своих записей, подходящих под условия и отсортированные в нужном порядке.
        - каждая запись отвечает стандартам HATEOS и ION (форматирование респонса и список возможных действий)
    - Каждая запись содержит:
        - название блюда
        - количество калорий
        - дату
        - флаг, показывающий достигнута ли дневная цель по калориям или нет
    - Если количество калорий не указано - система вызывает внешний сервис Calories API и пытается получить данные оттуда по названию блюда
    - Клиент может CRUD любые свои записи приемов пищи
    - Клиент может обновить данные своего аккаунта
        - если меняется DailyCaloriesTarget, то это не имеет обратного эффекта - записи за предыдущие дни должны по-прежнему
            использовать значение, актуальное для того дня
3. Есть авторизованный менеджер
    - менеджер может CRUD клиентов и других менеджеров
	- если редактирование - то для владельца добавляется push notification
    - менеджер может получить списки пользователей с возможностью фильтрации по полям, paging и указанием сортировки
    - менджер не может CRUD записи приемов пищи или просматривать их списки
4. Есть авторизованный админ
    - админ может CRUD клиентов, менеджеров и других админов
	- если редактирование - то для владельца добавляется push notification
    - админ может получить списки записей приемов пищи с возможностью фильтрации по полям, paging и указанием сортировки
    - админ может получить списки пользователей с возможностью фильтрации по полям, paging и указанием сортировки
    - админ может CRUD любые записи приемов пищи
	- для владельца добавляется push notification
    - админ может пригласить клиента по Email
        - система отправляем письмо на Email с предложением создать аккаунт и нужными полями
        - при сабмите корректно введенных полей создается новый аккаунт 
            - для его активации нужно подтвердить email, перейдя из специального письма
    - админ может разлочить заблокированного юзера