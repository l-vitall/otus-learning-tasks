Декомпозировать приложение на сервисы с помощью одного из паттернов декомпозиции.
Разделите ваше приложение на несколько микросервисов с учетом будущих изменений.

Попробуйте сделать несколько вариантов разбиений и попробуйте их оценить. Выберите вариант, который вы будете реализовывать.

На выходе вы должны предоставить 
1) Пользовательские сценарии
    - какие акторы, как взаимодействуют
2) Общую схему взаимодействия сервисов.
3) Для каждого сервиса опишите назначение сервиса и его зону ответственности.
4) Опишите контракты взаимодействия сервисов друг с другом.

************

    
Потенциальные фичи на будущее:
- построение исторических отчетов по дням / продуктам / изменение ежедневной нормы / когда норма превышалась, когда нет
- покупка треннинга по сбалансированному питанию / коррекции веса
- мобильный клиент, интеграция с фитнесбраслетами, отслеживание ежедневной активности (т.е. потраченных калорий)
- подключение специализированных ресторанов, организация заказов на полноценное ежедневное питание нужной калорийности с ежедневной доставкой

    
Верхнеуровневые сущности:
- Клиент
- Админ
- Менеджер
- Прием пищи
-- репорт
-- треннинг
-- активность за день
-- ресторан
-- заказ

Сервисы:
- API Gateway
	- получает все запросы в систему
	- направляет запросы на создания юзера и логин на AuthService
	- направляет запросы на работу с данными юзера на Rest API сервис
	-- направляет запросы на репорт на ReportingService

- Authentication service
	- получает данные пользователся и создает аккаунт
	- получает userName и Email и возвращает JWT токен либо ошибку
- User service
	- обрабатывает команды на CRUD записей
	- обрабатывает команды на поиск, фильтрацию, сортировку списка записей 
- CaloriesRecords service
	- обрабатывает команды на CRUD записей
	- обрабатывает команды на поиск, фильтрацию, сортировку списка записей
- Push Notifications Service
	- получает события от других сервисов	
	- возвращает [новые] события по запросу пользователя
-- Web UI
	- предоставляет пользовательский интерфейс в виде SPA
-- MobileApp
	- приложение Android / ios с пользовательским интерфейсом
-- Reporting service
	- работает с read-only репликой базы данных
	- получает запросы на подготовку и возврат репортов данных
-- Activity tracking service 
	- импортирует данные из смарт-девайсов, преобразует и обеспечивает сохранение в базу данных
-- Orders service 
	- обрабатывает запросы на заказы питания
	- обрабатывает запросы на рекомендации по питанию
	- возвращает доступные варианты питания для заказа одного из них
-- Message queue service
	- получает сообщения от всех других сервисов
	- передает сообщения на Push Notifications Service

Внешние сервисы:
- отправка Email сообщений
- получение количество калорий по названию еды
-- сервис оплаты
	- получает деньги от клиента и возаращает успех / неуспех
-- сервис доставки
	- получает заказы где и что забрать, куда доставить
-- сервис заказов питания (ресторан)
	- предоставляет варианты питания
	- получает заказы по вариантам питания
	- выдает готовые заказы для доставки
    
    
    
    
    
    
    
    
    
    
    
    